# 00c_E1_S1-theme-validate.yml instructions
# ---
# purpose: "Run Theme-level validators (Theme_LoreValidator.yml and related rules) against Theme_Main.yml and Theme_LoreIndex.yml. Produce a severity-sorted detailed report and a short human-readable remediation summary."
# run_command: "Run the ticket in 00c_E1_S1-theme-validate.yml"
# ai_create_ticket_prompt: |
#   Create a THEME-VALIDATE ticket YAML for E1_S1 that:
#     - reads Theme_LoreValidator.yml (rule set) and optional validator modules
#     - validates Theme_Main.yml and Theme_LoreIndex.yml (and optionally MemoryLog_Lore.yml)
#     - produces theme_validators_report.json (per-entry diagnostics with severity) and theme_validators_summary.md (human readable)
#     - returns non-zero exit or 'error' flag if any 'error' severity items are present
# preflight_checks:
#   - require Theme_Main.yml
#   - require Theme_LoreIndex.yml
# outputs_to_expect:
#   - theme_validators_report.json
#   - theme_validators_summary.md
# gate_rules:
#   - if any error-severity findings -> fail preflight and list remediation actions (do not proceed to ideation until resolved or a documented exception is approved)
# 00c_E1_S1-theme-validate.yml â€” preflight
# File: tickets/00c_E1_S1-theme-validate.yml
preflight:
  description: "Run Theme_LoreValidator rules against Theme artifacts."
  require_files:
    - "Theme/Theme_LoreValidator.yml"
    - "Theme/Theme_Main.yml"
    - "Theme/Theme_LoreIndex.yml"
  outputs_expected:
    - "artifacts/theme_validators_report_<ts>.json"
  fail_on_missing: true

job_ticket:
  id: "00c_E1_S1-theme-validate.<ts>"
  mode: fidelity
  intent: "Validate theme rules and produce a detailed report."

inputs:
  validator: "Theme/Theme_LoreValidator.yml"
  main: "Theme/Theme_Main.yml"
  index: "Theme/Theme_LoreIndex.yml"
  state: "Theme/Theme_Enforcement_State.yml"

steps:
  - resolve_phase:
      state: "{{inputs.state}}"
      out: "artifacts/00c_phase_<ts>.json"
  - run_validators:
      rules: "{{inputs.validator}}"
      targets: ["{{inputs.main}}","{{inputs.index}}"]
      phase: "artifacts/00c_phase_<ts>.json"
      out: "artifacts/theme_validators_report_<ts>.json"
  - append_logmark:
      event: "theme_validate_completed"
      payload: "artifacts/theme_validators_report_<ts>.json"
      log: "logs/logmarks.ndjson"

outputs:
  - id: "theme_validators_report"
    path: "artifacts/theme_validators_report_<ts>.json"
    suggested_folder: "artifacts"
    artifact_type: "report"
    retention: "artifacts"
    required: true
    checksum: true
    description: "Detailed validation findings for theme artifacts."
