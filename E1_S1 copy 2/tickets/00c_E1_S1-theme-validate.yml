# 00c_E1_S1-theme-validate.yml — THEME VALIDATE (auditor2)
# Purpose: Validate Theme files (schema/links); flag issues.
# Reads: Theme_Styleguide.yml, Theme_LoreIndex.yml
# Outputs: theme_validation_report.md
# RUN: auditor2 — Run 00c_E1_S1-theme-validate

meta:
  id: "00c_E1_S1-theme-validate"
  version: "2.0.0"
purpose: >
  Validate gated theme integrity and run report-only provenance checks.
  Never censors output; writes a readable provenance note.

params:
  overlay_paths_from: "/mnt/data/build/overlay_paths.json"
  core_map_json: "/mnt/data/build/core_map.json"
  theme_master: "/mnt/data/build/Theme_Master.yml"
  out_dir: "/mnt/data/build"

steps:
  - load_overlay_paths:
      from: "${overlay_paths_from}"
      var: "OVERLAYS"
      on_missing: "fail-fast"

  - sanity_check_core_map:
      path: "${core_map_json}"
      required_keys:
        - system_policy
        - project_core
        - prompt_persona_core
        - memory_core
        - narrative_core
        - operators_plugins
        - spiral_core
      on_fail: "fail-fast"

  - yaml_quick_lint:
      overlays: "${OVERLAYS}"
      include_globs: ["**/*.yml","**/*.yaml"]
      out_report: "${out_dir}/validate_yaml_lint.md"
      treat_warnings_as: "report"

  - call_validator:
      name: "validator_provenance_guard_min"
      args:
        draft: "/mnt/data/build/draft.md"
        project_master: "${theme_master}"
      out_expect: "/mnt/data/build/provenance_note.md"

  - write_validate_summary:
      out: "${out_dir}/validate_summary.md"
      include:
        - "yaml_quick_lint: ${out_dir}/validate_yaml_lint.md"
        - "provenance_note: ${out_dir}/provenance_note.md"

outputs:
  - "/mnt/data/build/validate_yaml_lint.md"
  - "/mnt/data/build/provenance_note.md"
  - "/mnt/data/build/validate_summary.md"

notes:
  - "Report-only: does not block or censor. Use 00e/00f for enforcement later if needed."
